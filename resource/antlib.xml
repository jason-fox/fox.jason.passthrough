<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--ant-->
<!--
	This file is part of the DITA-OT Passthrough Plug-in project.
	See the accompanying LICENSE file for applicable licenses.
-->
<antlib xmlns:if="ant:if" xmlns:unless="ant:unless">


	<!--
		Converts a value to result as generated by unix machines

		@param  string -   The value to convert
		@param  to -  The property to set
	-->
	<scriptdef language="javascript" name="unix-job-result" src="${dita.plugin.fox.jason.passthrough.dir}/resource/unix-job-xml-result.js">
		<attribute name="string" />
		<attribute name="to" />
	</scriptdef>


	<!--
		Converts a value to result as generated by windows machines

		@param  string -   The value to convert
		@param  to -  The property to set
	-->
	<scriptdef language="javascript" name="windows-job-result" src="${dita.plugin.fox.jason.passthrough.dir}/resource/windows-job-xml-result.js">
		<attribute name="string" />
		<attribute name="to" />
	</scriptdef>

	<!--
		Removes a prefix from a file

		@param  string -   The value to convert
		@param  to -  The property to set
	-->
	<scriptdef language="javascript" name="strip-prefix" src="${dita.plugin.fox.jason.passthrough.dir}/resource/strip-prefix.js">
		<attribute name="string" />
		<attribute name="to" />
	</scriptdef>

	<!--
		Run a given macro against an input and output

		@param macro - A macro to run.
		@param src - The source topic filename
		@param dest - The destination topic filename
		@param metadata - Topic metadata
	-->
	<scriptdef language="javascript" name="passthrough-task" src="${dita.plugin.fox.jason.passthrough.dir}/resource/execute-task.js">
		<attribute name="macro" />
		<attribute name="src" />
		<attribute name="dest" />
		<attribute name="metadata" />
	</scriptdef>

	<!--
		Iterator function to run a given macro against a set of dita files

		@param macro - The name of a  macro to run.
		@param format - The format to look for in ditamaps
	-->
	<macrodef name="passthrough-iterate">
		<attribute name="format" />
		<attribute name="macro" />
		<sequential>

			<ditamaps-passthrough dir="${dita.temp.dir}" format="@{format}" macro="@{macro}">
				<fileset refid="passthrough.ditamaps" />
			</ditamaps-passthrough>

			<xmltask taskname="read-job.xml" source="${dita.temp.dir}${file.separator}.job.xml">
				<call path="//file[@format='@{format}']">
					<param default="" name="path" path="@path"/>
					<param default="" name="result" path="@result"/>
					<actions>
						<process-passthrough path="@{path}" result="@{result}" macro="@{macro}"/>
					</actions>
				</call>
			</xmltask>
		</sequential>
	</macrodef>

	<!--
		Iterator function to run a given macro against a set of dita files

		@param macro - The name of a  macro to run.
		@param fileset - A set of ditamap files
		@param dir - The input directory
		@param format - The format to look for in ditamaps
	-->
	<scriptdef language="javascript" name="ditamaps-passthrough" src="${dita.plugin.fox.jason.passthrough.dir}/resource/ditamaps.js">
		<attribute name="macro" />
		<attribute name="format" />
		<attribute name="dir" />
		<element name="fileset" type="fileset"/>
	</scriptdef>

	<!--
		Iterator function to run a given macro against a set of dita files

		@param macro - The name of a  macro to run.
		@param file - The ditamap to search
		@param format - The format to look for in ditamaps
	-->
	<macrodef name="dita-passthrough">
		<attribute name="format" />
		<attribute name="macro" />
		<attribute name="file" />
		<sequential>
			<xmltask taskname="read-ditamap" source="@{file}">
				<call path="//*[@dita-ot:orig-format='@{format}']">
					<param default="" name="href" path="@href"/>
					<param default="" name="xtrf" path="@xtrf"/>
					<actions>
						<local name="result"/>
						<local name="ditamap"/>
						<local name="ditamap.dir"/>
						<strip-prefix string="@{xtrf}" to="ditamap"/>
						<dirname property="ditamap.dir" file="${ditamap}"/>
						<unix-job-result unless:set="is_windows" to="result" string="${ditamap.dir}${file.separator}@{href}"/>
						<windows-job-result if:set="is_windows" to="result" string="${ditamap.dir}${file.separator}@{href}"/>
						<xmltask taskname="read-job.xml" source="${passthrough.job.file}">
							<call path="//file[@result='${result}']">
								<param default="" name="path" path="@path"/>
								<param default="" name="result" path="@result"/>
								<param default="" name="src" path="@src"/>
								<param default="" name="uri" path="@uri"/>
								<actions>
									<process-passthrough path="@{path}" result="@{result}" macro="@{macro}"/>
									<!-- For Multi-file transforms, ensure that the file suffix is dita -->
									<local name="dest"/>
									<property name="dest" value="${dita.temp.dir}${file.separator}@{path}"/>
									<move taskname="file-rename" file="${dest}" tofile="${dest}.dita"/>
									<xmltask taskname="update-uri" source="${passthrough.job.file}" dest="${passthrough.job.file}">
										<attr path="//file[@result='${result}' and @uri='@{uri}']" 
												attr="uri" value="@{uri}.dita" /> 
										<attr path="//file[@result='${result}' and @path='@{path}']" 
												attr="path" value="@{path}.dita" /> 
										<attr path="//file[@result='${result}' and @src='@{src}']" 
												attr="src" value="@{src}.dita" /> 
												
									</xmltask>
								</actions>
							</call>
						</xmltask>
					</actions>
				</call>
			</xmltask>
		</sequential>
	</macrodef>

	<!--
		Retrieve the metadata for the topic

		@param path - The xpath to search
		@param property - The output property to set (or blank if not found)
	-->
	<macrodef name="get-metadata">
		<attribute name="path" />
		<attribute name="property" />
		<sequential>
			<local name="metadata.file"/>
			<tempfile deleteonexit="true" destdir="${dita.temp.dir}" 
					property="metadata.file" suffix="xml"/>
			
			<xmltask taskname="check-metadata" source="${args.input}">
				<xmlcatalog unless:set="is_windows" refid="dita.catalog"/>
				<xmlcatalog if:set="is_windows" refid="passthrough.dita.catalog"/>
				<call path="//*[@href='@{path}']/topicmeta">
					<actions>
						<xmltask taskname="read-metadata" source="${args.input}" clearBuffers="b">
							<xmlcatalog unless:set="is_windows" refid="dita.catalog"/>
							<xmlcatalog if:set="is_windows" refid="passthrough.dita.catalog"/>
							<copy path="//*[@href='@{path}']/topicmeta" buffer="b" append="true"/>
						</xmltask>
						<xmltask sourcebuffer="b" dest="${metadata.file}"/>
						<property name="@{property}" value="${metadata.file}"/>
					</actions>
				</call>
			</xmltask>
			<property name="@{property}" value=""/>
		</sequential>
	</macrodef>

	<!--
		Initiate passthrough processing

		@param path - The input location of a file to process
		@param result - The output location for the processed file
		@param macro - The name of a  macro to run.
	-->
	<macrodef name="process-passthrough">
		<attribute name="path" />
		<attribute name="result" />
		<attribute name="macro" />
		<sequential>
			<local name="dest"/>
			<local name="src"/>
			<local name="metadata"/>
			<get-metadata path="@{path}" property="metadata"/>
			<property name="dest" value="${dita.temp.dir}${file.separator}@{path}"/>
			<strip-prefix string="@{result}" to="src"/>
			<passthrough-task src="${src}" dest="${dest}" macro="@{macro}" metadata="${metadata}"/>
		</sequential>
	</macrodef>

</antlib>